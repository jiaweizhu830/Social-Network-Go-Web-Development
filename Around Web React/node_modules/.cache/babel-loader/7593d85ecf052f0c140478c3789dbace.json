{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xiaoq\\\\Developer\\\\around-web\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from \"../constants\";\nimport '../styles/Login.css';\nimport { Form, Input, Button, message } from 'antd';\nimport Icon from '@ant-design/icons';\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let lastResponse;\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          fetch(`${API_ROOT}/login`, {\n            method: 'POST',\n            body: JSON.stringify({\n              username: values.username,\n              password: values.password\n            })\n          }).then(response => {\n            lastResponse = response;\n            return response.text();\n          }, error => {\n            console.log('Error');\n          }).then(text => {\n            if (lastResponse.ok) {\n              message.success('Login success!'); //successful login => return token (text)\n\n              this.props.handleLogin(text);\n            } else {\n              message.error(text);\n            }\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 35\n        }\n      }),\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      classname: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Or \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 28\n      }\n    }, \"register now!\"))));\n  }\n\n}\n\n;\nexport const Login = NormalLoginForm; // export const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);","map":{"version":3,"sources":["C:/Users/xiaoq/Developer/around-web/src/components/Login.js"],"names":["React","Link","API_ROOT","Form","Input","Button","message","Icon","NormalLoginForm","Component","handleSubmit","e","preventDefault","lastResponse","props","form","validateFields","err","values","console","log","fetch","method","body","JSON","stringify","username","password","then","response","text","error","ok","success","handleLogin","render","getFieldDecorator","rules","required","color","validator","validateToNextPassword","Login"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {API_ROOT} from \"../constants\"\r\nimport '../styles/Login.css';\r\n\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        let lastResponse;\r\n\r\n        this.props.form.validateFields ((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                fetch(`${API_ROOT}/login`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    }),\r\n                }).then((response) => {\r\n                    lastResponse = response;\r\n                    return response.text();\r\n                }, (error) => {\r\n                    console.log('Error');\r\n                }).then((text) => {\r\n                    if (lastResponse.ok) {\r\n                        message.success('Login success!');\r\n                        //successful login => return token (text)\r\n                        this.props.handleLogin(text);\r\n                    } else {\r\n                        message.error(text);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Input\r\n                          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                              placeholder=\"Username\"\r\n                          />,\r\n                      )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                            {\r\n                                validator: this.validateToNextPassword,\r\n                            }\r\n                        ],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" classname=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    <div>\r\n                        Or <Link to=\"/register\">register now!</Link>\r\n                    </div>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n};\r\n\r\nexport const Login = NormalLoginForm;\r\n// export const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}