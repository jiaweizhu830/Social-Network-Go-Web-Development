{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xiaoq\\\\Developer\\\\around-web\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from \"../constants\";\nimport '../styles/Login.css';\nimport { Form, Input, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let lastResponse;\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          fetch(`${API_ROOT}/login`, {\n            method: 'POST',\n            body: JSON.stringify({\n              username: values.username,\n              password: values.password\n            })\n          }).then(response => {\n            lastResponse = response;\n            return response.text();\n          }, error => {\n            console.log('Error');\n          }).then(text => {\n            if (lastResponse.ok) {\n              message.success('Login success!'); //successful login => return token (text)\n\n              this.props.handleLogin(text);\n            } else {\n              message.error(text);\n            }\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }),\n      placeholder: \"Username\" // placeholder=\"Username\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\" // type=\"password\"\n      // placeholder=\"Password\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Log in\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Or \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 28\n      }\n    }, \"register now!\"))));\n  } // render () {\n  //     const { getFieldDecorator } = this.props.form;\n  //\n  //     return (\n  //         <Form onSubmit={this.handleSubmit} className=\"login-form\">\n  //             <Form.Item>\n  //                 {getFieldDecorator('username', {\n  //                     rules: [\n  //                         {\n  //                             required: true,\n  //                             message: 'Please input your username!',\n  //                         },\n  //                     ],\n  //                 })(\n  //                     <Input\n  //                       prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n  //                           placeholder=\"Username\"\n  //                       />,\n  //                   )}\n  //             </Form.Item>\n  //\n  //             <Form.Item>\n  //                 {getFieldDecorator('password', {\n  //                     rules: [\n  //                         {\n  //                             required: true,\n  //                             message: 'Please input your password!',\n  //                         },\n  //                         {\n  //                             validator: this.validateToNextPassword,\n  //                         }\n  //                     ],\n  //                 })(\n  //                     <Input\n  //                         prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n  //                         type=\"password\"\n  //                         placeholder=\"Password\"\n  //                     />,\n  //                 )}\n  //             </Form.Item>\n  //\n  //             <Form.Item>\n  //                 <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n  //                     Log in\n  //                 </Button>\n  //                 <div>\n  //                     Or <Link to=\"/register\">register now!</Link>\n  //                 </div>\n  //             </Form.Item>\n  //         </Form>\n  //     );\n  // }\n\n\n}\n\n;\nexport const Login = NormalLoginForm; // export const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);","map":{"version":3,"sources":["C:/Users/xiaoq/Developer/around-web/src/components/Login.js"],"names":["React","Link","API_ROOT","Form","Input","Button","message","UserOutlined","LockOutlined","NormalLoginForm","Component","handleSubmit","e","preventDefault","lastResponse","props","form","validateFields","err","values","console","log","fetch","method","body","JSON","stringify","username","password","then","response","text","error","ok","success","handleLogin","render","required","Login"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {API_ROOT} from \"../constants\"\r\nimport '../styles/Login.css';\r\n\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        let lastResponse;\r\n\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                fetch(`${API_ROOT}/login`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    }),\r\n                }).then((response) => {\r\n                    lastResponse = response;\r\n                    return response.text();\r\n                }, (error) => {\r\n                    console.log('Error');\r\n                }).then((text) => {\r\n                    if (lastResponse.ok) {\r\n                        message.success('Login success!');\r\n                        //successful login => return token (text)\r\n                        this.props.handleLogin(text);\r\n                    } else {\r\n                        message.error(text);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item name=\"username\"\r\n                   rules={[\r\n                       {\r\n                           required: true,\r\n                           message: 'Please input your username!',\r\n                       },\r\n                   ]}>\r\n                    <Input\r\n                        prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"\r\n                        // placeholder=\"Username\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"password\"\r\n                       rules={[\r\n                            {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                            },\r\n                ]}>\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\"/>} type=\"password\" placeholder=\"Password\"\r\n                            // type=\"password\"\r\n                            // placeholder=\"Password\"\r\n                        />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    <div>\r\n                        Or <Link to=\"/register\">register now!</Link>\r\n                    </div>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    // render () {\r\n    //     const { getFieldDecorator } = this.props.form;\r\n    //\r\n    //     return (\r\n    //         <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n    //             <Form.Item>\r\n    //                 {getFieldDecorator('username', {\r\n    //                     rules: [\r\n    //                         {\r\n    //                             required: true,\r\n    //                             message: 'Please input your username!',\r\n    //                         },\r\n    //                     ],\r\n    //                 })(\r\n    //                     <Input\r\n    //                       prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n    //                           placeholder=\"Username\"\r\n    //                       />,\r\n    //                   )}\r\n    //             </Form.Item>\r\n    //\r\n    //             <Form.Item>\r\n    //                 {getFieldDecorator('password', {\r\n    //                     rules: [\r\n    //                         {\r\n    //                             required: true,\r\n    //                             message: 'Please input your password!',\r\n    //                         },\r\n    //                         {\r\n    //                             validator: this.validateToNextPassword,\r\n    //                         }\r\n    //                     ],\r\n    //                 })(\r\n    //                     <Input\r\n    //                         prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n    //                         type=\"password\"\r\n    //                         placeholder=\"Password\"\r\n    //                     />,\r\n    //                 )}\r\n    //             </Form.Item>\r\n    //\r\n    //             <Form.Item>\r\n    //                 <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n    //                     Log in\r\n    //                 </Button>\r\n    //                 <div>\r\n    //                     Or <Link to=\"/register\">register now!</Link>\r\n    //                 </div>\r\n    //             </Form.Item>\r\n    //         </Form>\r\n    //     );\r\n    // }\r\n};\r\n\r\nexport const Login = NormalLoginForm;\r\n// export const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}